{"version":3,"sources":["components/tag.js","components/game.js","App.js","reportWebVitals.js","index.js"],"names":["Tag","tag","separator","Game","game","style","position","width","name","href","url","src","image","alt","className","tags","map","index","length","localGames","require","App","useState","isLoading","setIsLoading","gamePos","setGamePos","buttonsEnabled","setButtonsEnabled","games","setGames","currentGame","setCurrentGame","currentAnimation","enterDelay","exitDelay","useEffect","fetch","then","response","json","data","sort","Math","random","rel","CSSTransition","in","appear","timeout","classNames","TransitionGroup","ref","React","createRef","enter","exit","Button","variant","size","onClick","nextPos","disabled","setTimeout","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f7b24a5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Tag = ({\n  tag,\n  separator\n}) => {\n  return (\n    <>{tag}{separator}</>\n  )\n}\n","import React from 'react';\n\nimport { Tag } from './tag.js';\n\nexport const Game = ({\n  game\n}) => {\n  const getTags = () => {\n    return game.tags.map((tag, index) => {\n      const separator = index === game.tags.length - 1 ? \" \" : \", \";\n      return (\n        <Tag tag={tag} separator={separator} key={index} />\n      );\n    })\n  }\n\n  const getAltText = () => {\n    return `Visit the website ${game.name}`;\n  }\n\n  return (\n    <div style={{ position: 'absolute', width: '100%' }}>\n      <h3>{game.name}</h3>\n      <div>\n        <a href={game.url}>\n          <img src={game.image} alt={getAltText()} className=\"game-img\"></img>\n        </a>\n      </div>\n      <div><p>{getTags()}</p></div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport './App.css';\nimport { Game } from './components/game.js';\n\nlet localGames = require('./games.json');\n\nexport const App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [gamePos, setGamePos] = useState(0);\n  const [buttonsEnabled, setButtonsEnabled] = useState(true);\n  const [games, setGames] = useState(localGames);\n  const [currentGame, setCurrentGame] = useState(localGames[0]);\n\n  let currentAnimation = \"slide\";\n  let enterDelay = 800;\n  let exitDelay = 400;\n\n  useEffect(() => {\n    fetch('https://scottajevans.github.io/sibmdata/data.json')\n      .then(response => response.json())\n      .then(data => {\n        data.sort(() => 0.5 - Math.random());\n        setIsLoading(false);\n        setGames(data);\n        setCurrentGame(data[0]);\n      });\n  }, [])\n\n  const clickedNext = () => {\n    const nextPos = gamePos === games.length - 1 ? 0 : gamePos + 1;\n    setGamePos(nextPos);\n    setCurrentGame(games[nextPos]);\n  }\n\n  const clickedRandomise = () => {\n    setButtonsEnabled(false);\n    currentAnimation = \"slip\";\n    enterDelay = 400;\n    exitDelay = 200;\n\n    for (let i = 0; i < 4; i++) {\n      setTimeout(() => {\n        setCurrentGame(games[i]);\n      }, i * 400);\n    }\n\n    setGames(games.sort(() => 0.5 - Math.random()));\n    setCurrentGame(games[0]);\n\n    setButtonsEnabled(true)\n    enterDelay = 800;\n    exitDelay = 400;\n    currentAnimation = \"slide\"\n  }\n\n  return (\n    <div className=\"App\">\n      <link rel=\"stylesheet\" href=\"brick.a.ssl.fastly.net/Roboto:400\" />\n      {isLoading ? (\n        <div>Games are loading</div>\n      ) : (\n      <CSSTransition\n        in={true}\n        appear={true}\n        timeout={800}\n        classNames=\"fade\"\n      >\n        <div>\n          <header className=\"App-header\">\n            <h1>S.I.B.M.</h1>\n            <h2>For Super Import Business Meeting use only</h2>\n          </header>\n          <body className=\"App-body\">\n            <TransitionGroup>\n              <CSSTransition\n                ref={React.createRef()}\n                key={currentGame.name}\n                timeout={{ enter: enterDelay, exit: exitDelay }}\n                classNames={currentAnimation}\n              >\n                <Game game={currentGame} />\n              </CSSTransition>\n            </TransitionGroup>\n            <div style={{\n              'marginTop': '300px'\n            }}>\n              <Button variant=\"primary\" size=\"lg\" className=\"next-btn\" onClick={clickedNext} disabled={!buttonsEnabled}>Next</Button>\n              <Button variant=\"primary\" size=\"lg\" className=\"randomise-btn\" onClick={clickedRandomise} disabled={!buttonsEnabled}>Randomize</Button>\n            </div>\n          </body>\n        </div>\n      </CSSTransition>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}